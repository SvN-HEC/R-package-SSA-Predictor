k<-6
# Check: forecast horizon h=4:
h_vec[k]
# Forward-shifts of BIP (+publication lag)
shift<-3
final_predictor<-NULL
sel_vec_pred<-"BIP"
# We compute the final predictor, based on data up to the sample end
# Note: for simplicity we here compute an OLS regression 
  # Data matrix: forward-shifted BIP and M-SSA components  
if (length(sel_vec_pred)>1)
{
  dat<-cbind(c(x_mat[(shift+lag_vec[1]+1):nrow(x_mat),1],rep(NA,shift+lag_vec[1])),t(mssa_array[sel_vec_pred,,k]))
} else
{
  dat<-cbind(c(x_mat[(shift+lag_vec[1]+1):nrow(x_mat),1],rep(NA,shift+lag_vec[1])),(mssa_array[sel_vec_pred,,k]))
}
rownames(dat)<-rownames(x_mat)
dat<-na.exclude(dat)
# Compute GARCH vola  
y.garch_11<-garchFit(~garch(1,1),data=dat_reg[,1],include.mean=T,trace=F)
# sigmat could be retrieved from GARCH-object
sigmat<-y.garch_11@sigma.t
# But this is lagged by one period
# Therefore we recompute the vola based on the estimated GARCH-parameters
eps<-y.garch_11@residuals
d<-y.garch_11@fit$matcoef["omega",1]
alpha<-y.garch_11@fit$matcoef["alpha1",1]
beta<-y.garch_11@fit$matcoef["beta1",1]
sigmat_own<-sigmat
for (i in 2:length(sigmat))#i<-2
  sigmat_own[i]<-sqrt(d+beta*sigmat_own[i-1]^2+alpha*eps[i]^2)
# This is now correct (not lagging anymore)
sigmat<-sigmat_own
# Weights are proportional to 1/sigmat^2      
weight<-1/sigmat^2
#  weight<-rep(1,length(sigmat))#/sigmat^2
# OLS regression  
lm_obj<-lm(dat[,1]~dat[,2:ncol(dat)],weight=weight)
summary(lm_obj)
#  lm_obj<-lm(dat[,1]~dat[,2:ncol(dat)])
optimal_component_weights<-lm_obj$coef
# Compute predictor for each forward-shift  
final_predictor<-cbind(final_predictor,optimal_component_weights[1]+dat[,2:ncol(dat)]%*%optimal_component_weights[2:length(optimal_weights)])
  

# Plot M-SSA components predictors (optimized for h=4) and shifts 0:5
par(mfrow=c(1,1))
# Standardize for easier visual inspection
mplot<-scale(cbind(dat[,1],final_predictor))
colnames(mplot)<-c(paste("BIP forward-shifted by ",shift," quarters (plus publication lag)",sep=""),
                   paste("h=",h_vec[k],", shift=",shift_vec,sep=""))
colo<-c("black",rainbow(ncol(final_predictor)))
main_title<-paste("Final predictors based on M-SSA-components ",paste(sel_vec_pred,collapse=","),": h=",h_vec[k],sep="")
plot(mplot[,1],main=main_title,axes=F,type="l",xlab="",ylab="",col=colo[1],lwd=2,ylim=c(min(na.exclude(mplot)),max(na.exclude(mplot))))
mtext(colnames(mplot)[1],col=colo[1],line=-1)
for (i in 1:ncol(mplot))
{
  lines(mplot[,i],col=colo[i],lwd=1,lty=1)
  mtext(colnames(mplot)[i],col=colo[i],line=-i)
}
abline(h=0)
abline(v=which(rownames(mplot)<=date_to_fit)[length(which(rownames(mplot)<=date_to_fit))],lwd=2,lty=2)
axis(1,at=c(1,4*1:(nrow(mplot)/4)),labels=rownames(mplot)[c(1,4*1:(nrow(mplot)/4))])
axis(2)
box()


perf_obj$p_value_HAC_BIP_oos



2019-07-01  0.09937700    4.4723557
2019-10-01  0.10403211    4.5754540
2020-01-01  0.09488015    4.4154509
2020-04-01  0.09856104    4.3179754
2020-07-01  0.09390052    3.6201764
2020-10-01  0.09500475    3.8642115
2021-01-01  0.09071353    3.2602423
2021-04-01  0.08375410    2.5120344
2021-07-01  0.08497892    2.7062105
2021-10-01  0.07615869    2.6085524
2022-01-01  0.07192079    2.5732921
2022-04-01  0.06590360    2.5755832
2022-07-01  0.06215700    2.6500933
